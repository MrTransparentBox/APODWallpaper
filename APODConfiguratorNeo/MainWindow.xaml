<?xml version="1.0" encoding="utf-8"?>
<Window
    x:Class="APODConfiguratorNeo.MainWindow"
    xmlns="http://schemas.microsoft.com/winfx/2006/xaml/presentation"
    xmlns:x="http://schemas.microsoft.com/winfx/2006/xaml"
    xmlns:local="using:APODConfiguratorNeo"
    xmlns:utils="using:APODWallpaper.Utils"
    xmlns:d="http://schemas.microsoft.com/expression/blend/2008"
    xmlns:mc="http://schemas.openxmlformats.org/markup-compatibility/2006"
    mc:Ignorable="d"
    x:Name="window">

    <Window.SystemBackdrop>
        <DesktopAcrylicBackdrop/>
    </Window.SystemBackdrop>
    <!--#region old-->
    <!--<Window.Triggers>
        <EventTrigger RoutedEvent="Window.Loaded">
            <BeginStoryboard>
                <Storyboard>
                    <DoubleAnimation Storyboard.TargetName="grdMain" Storyboard.TargetProperty="Opacity" 
                                         From="0.0" To="1.0" Duration="0:0:0:0.3"/>
                    <DoubleAnimation Storyboard.TargetName="window" Storyboard.TargetProperty="Height" 
                                         From="400" To="500.0" Duration="0:0:0.35"/>
                </Storyboard>
            </BeginStoryboard>
        </EventTrigger>
    </Window.Triggers>-->
    <!--<Window.Resources>-->
        <!--<Storyboard x:Key="closeAnim" Completed="CloseStoryboard_Completed">
            <DoubleAnimation Storyboard.TargetName="grdMain" Storyboard.TargetProperty="Opacity"
                             From="1.0" To="0.0" Duration="0:0:0.4"/>
            <DoubleAnimation Storyboard.TargetName="window" Storyboard.TargetProperty="Width" 
                                         To="750" From="800.0" Duration="0:0:0.2"/>
        </Storyboard>-->

        <!--<ObjectDataProvider x:Key="StyleEnumSource" ObjectType="{x:Type sys:Enum}" MethodName="GetValues">
            <ObjectDataProvider.MethodParameters>
                <x:Type TypeName="utils:WallpaperStyleEnum"/>
            </ObjectDataProvider.MethodParameters>
        </ObjectDataProvider>
        <Style x:Key="Dark_light" TargetType="Grid">
            <Setter Property="Background" Value="{DynamicResource Light}"/>
        </Style>
        <Style TargetType="{x:Type ListView}">
            <Setter Property="Background" Value="{DynamicResource Light}"/>
        </Style>-->
        <!-- Dark_mid--><!--
        <Style TargetType="{x:Type StackPanel}">
            <Setter Property="Background" Value="{DynamicResource Mid}"/>
        </Style>
        <Style TargetType="Label">
            <Setter Property="Background" Value="{DynamicResource Dark}"/>
            <Setter Property="Foreground" Value="{DynamicResource Foreground}"/>
        </Style>
        <Style TargetType="{x:Type RadioButton}">
            <Setter Property="Foreground" Value="{DynamicResource Foreground}"/>
            <Setter Property="Background" Value="{DynamicResource Dark}"/>
            <Setter Property="Template" Value="{DynamicResource RadioButtonTemplateCustom}"/>
        </Style>
        <Style TargetType="{x:Type TextBlock}">
            <Setter Property="Foreground" Value="{DynamicResource Foreground}"/>
        </Style>
        <Style TargetType="{x:Type CheckBox}">
            <Setter Property="Foreground" Value="{DynamicResource Foreground}"/>
            <Setter Property="Background" Value="{DynamicResource Dark}"/>
            <Setter Property="Margin" Value="5 3"/>
            <Setter Property="Template" Value="{DynamicResource CheckBoxTemplateCustom}"/>
        </Style>
        <Style TargetType="{x:Type Button}">
            <Setter Property="Foreground" Value="{DynamicResource Foreground}"/>
            <Setter Property="Background" Value="{DynamicResource Dark}"/>
            <Setter Property="HorizontalContentAlignment" Value="Center"/>
            <Setter Property="VerticalContentAlignment" Value="Center"/>
            <Setter Property="HorizontalAlignment" Value="Stretch"/>
            <Setter Property="VerticalAlignment" Value="Stretch"/>
            --><!--<Setter Property="Cursor" Value="Hand"/>--><!--
            <Setter Property="Template">
                <Setter.Value>
                    <ControlTemplate TargetType="{x:Type Button}">
                        <Grid Margin="{TemplateBinding Margin}">
                            <Rectangle x:Name="RctBtn" RadiusX="7" RadiusY="7" Fill="{TemplateBinding Background}"/>
                            <ContentPresenter Content="{TemplateBinding Content}" 
                                   HorizontalAlignment="{TemplateBinding HorizontalContentAlignment}" VerticalAlignment="{TemplateBinding VerticalContentAlignment}"/>
                        </Grid>
                        <ControlTemplate.Triggers>
                            <Trigger Property="IsMouseOver" Value="True">
                                <Setter TargetName="RctBtn" Property="Fill" Value="{DynamicResource MouseOver}"/>
                            </Trigger>
                        </ControlTemplate.Triggers>
                    </ControlTemplate>
                </Setter.Value>
            </Setter>
        </Style>
        <Style TargetType="{x:Type Button}" x:Key="BtnClose">
            <Setter Property="Template">
                <Setter.Value>
                    <ControlTemplate TargetType="{x:Type Button}">
                        <Grid>
                            <Rectangle x:Name="rect" Fill="{DynamicResource Dark}" RadiusX="5" RadiusY="5" Margin="1 0"/>
                            <ContentPresenter Content="{TemplateBinding Content}" VerticalAlignment="Center" HorizontalAlignment="Center"/>
                            --><!-- Foreground="{TemplateBinding Foreground}"/> --><!--
                        </Grid>
                        <ControlTemplate.Triggers>
                            <Trigger Property="IsMouseOver" Value="True">
                                <Setter TargetName="rect" Property="Fill" Value="#CCFF0000"/>
                            </Trigger>
                        </ControlTemplate.Triggers>
                    </ControlTemplate>
                </Setter.Value>
            </Setter>
        </Style>
        <Style TargetType="{x:Type TabItem}">
            <Setter Property="Foreground" Value="{DynamicResource Foreground}"/>
            <Setter Property="Template">
                <Setter.Value>
                    <ControlTemplate TargetType="{x:Type TabItem}">
                        <Border>
                            <Grid>
                                <Grid>
                                    <Border x:Name="border" 
                                            CornerRadius="3,3,0,0"
                                            Background="{DynamicResource Light}"/>
                                </Grid>
                                <ContentPresenter ContentSource="Header"
                                                      HorizontalAlignment="Center"
                                                      VerticalAlignment="Center" Width="auto" Margin="5 3"/>
                            </Grid>
                        </Border>

                        <ControlTemplate.Triggers>
                            <Trigger Property="IsSelected" Value="True">
                                <Setter TargetName="border" Property="Background" Value="{DynamicResource Selected}"/>
                            </Trigger>
                            <Trigger Property="IsMouseOver" Value="True">
                                <Setter TargetName="border" Property="Background" Value="{DynamicResource MouseOver}"/>
                            </Trigger>
                        </ControlTemplate.Triggers>
                    </ControlTemplate>
                </Setter.Value>
            </Setter>
        </Style>
    </Window.Resources>-->
    <!--#endregion-->
    <NavigationView x:Name="mainTabControl"  Grid.ColumnSpan="5" Grid.Row="1">
        <NavigationView.MenuItems>
            <NavigationViewItem Icon="Pictures" Content="Image manager" Tag="Image"/>
            <NavigationViewItem Icon="Globe" Content="Explore" Tag="Explore"/>
            <NavigationViewItem Icon="Setting" Content="Settings" Tag="Settings"/>
            <NavigationViewItem Icon="Document" Content="Output" Tag="Output"/>
        </NavigationView.MenuItems>
        <Frame x:Name="mainframe"/>
    </NavigationView>
</Window>
