<?xml version="1.0" encoding="utf-8"?>
<Window
    x:Class="APODConfiguratorNeo.MainWindow"
    xmlns="http://schemas.microsoft.com/winfx/2006/xaml/presentation"
    xmlns:x="http://schemas.microsoft.com/winfx/2006/xaml"
    xmlns:local="using:APODConfiguratorNeo"
    xmlns:utils="using:APODWallpaper.Utils"
    xmlns:ui="using:CommunityToolkit.WinUI"
    xmlns:d="http://schemas.microsoft.com/expression/blend/2008"
    xmlns:mc="http://schemas.openxmlformats.org/markup-compatibility/2006"
    mc:Ignorable="d"
    x:Name="window">

    <Window.SystemBackdrop>
        <DesktopAcrylicBackdrop/>
    </Window.SystemBackdrop>
    <!--<Window.Triggers>
        <EventTrigger RoutedEvent="Window.Loaded">
            <BeginStoryboard>
                <Storyboard>
                    <DoubleAnimation Storyboard.TargetName="grdMain" Storyboard.TargetProperty="Opacity" 
                                     From="0.0" To="1.0" Duration="0:0:0:0.3"/>
                    <DoubleAnimation Storyboard.TargetName="window" Storyboard.TargetProperty="Height" 
                                     From="400" To="500.0" Duration="0:0:0.35"/>
                </Storyboard>
            </BeginStoryboard>
        </EventTrigger>
    </Window.Triggers>-->
    <!--<Window.Resources>
        <local:EnumConverter x:Key="enumConverter"/>
        <local:InverseBoolConverter x:Key="inverseBoolConverter"/>
        <Storyboard x:Key="closeAnim" Completed="CloseStoryboard_Completed">
            <DoubleAnimation Storyboard.TargetName="grdMain" Storyboard.TargetProperty="Opacity"
                         From="1.0" To="0.0" Duration="0:0:0.4"/>
            <DoubleAnimation Storyboard.TargetName="window" Storyboard.TargetProperty="Width" 
                                     To="750" From="800.0" Duration="0:0:0.2"/>
        </Storyboard>

        <ObjectDataProvider x:Key="StyleEnumSource" ObjectType="{x:Type sys:Enum}" MethodName="GetValues">
            <ObjectDataProvider.MethodParameters>
                <x:Type TypeName="utils:WallpaperStyleEnum"/>
            </ObjectDataProvider.MethodParameters>
        </ObjectDataProvider>
    </Window.Resources>-->
    <Grid x:Name="grdMain">
        <Grid.RowDefinitions>
            <RowDefinition Height="30"/>
            <RowDefinition Height="*"/>
        </Grid.RowDefinitions>
        <TabView x:Name="CustomTabControl" Grid.ColumnSpan="5" Grid.Row="1">
            <TabViewItem x:Name="ImageTab" Header="Image manager">
                <Grid>
                    <Grid.ColumnDefinitions>
                        <ColumnDefinition Width="1*" />
                        <ColumnDefinition Width="30" />
                    </Grid.ColumnDefinitions>
                    <Grid.RowDefinitions>
                        <RowDefinition Height="1*" />
                        <RowDefinition Height="50" />
                    </Grid.RowDefinitions>
                    <GridView ItemsSource="{x:Bind MyPictureData}" x:Name="wallpaperView" IsItemClickEnabled="True" ItemClick="wallpaperView_ItemClick">
                        <GridView.ItemTemplate>
                            <DataTemplate x:DataType="utils:PictureData">
                                <StackPanel Width="200" Height="200" Margin="5" AutomationProperties.Name="{x:Bind Name}">
                                    <TextBlock Text="{x:Bind Name}" FontWeight="Bold"/>
                                    <TextBlock Text="{x:Bind Description}"/>
                                    <Image Source="{x:Bind Source}" Stretch="UniformToFill"/>
                                </StackPanel
                            </DataTemplate>
                        </GridView.ItemTemplate>
                    </GridView>
                    <Button x:Name="BtnCheckNew" Content="Check for new image" Grid.Row="1" Width="250" Height="32" Click="CheckNew"/>
                </Grid>
            </TabViewItem>
            <TabViewItem x:Name="SettingsTab" Header="Settings" DataContext="{x:Bind utils:Configuration.Config}">
                <Grid>
                    <Grid.ColumnDefinitions>
                        <ColumnDefinition Width="*"/>
                        <ColumnDefinition Width="*"/>
                    </Grid.ColumnDefinitions>
                    <Grid.RowDefinitions>
                        <RowDefinition Height="*"/>
                        <RowDefinition Height="*"/>
                    </Grid.RowDefinitions>
                    <Grid Grid.Row="0" Grid.Column="0" Margin="10">
                        <Grid.RowDefinitions>
                            <RowDefinition Height="30"/>
                            <RowDefinition Height="*"/>
                        </Grid.RowDefinitions>
                        <TextBlock Text="   General" FontWeight="Bold" FontSize="14" Height="30"/>
                        <StackPanel Margin="10" Grid.Row="1">
                            <CheckBox x:Name="ChkExplainImage" Content="Show image explanation on update" IsChecked="{Binding ExplainImage, Mode=TwoWay, UpdateSourceTrigger=PropertyChanged}"/>
                        </StackPanel>
                    </Grid>
                    <Border Grid.Column="0" Grid.Row="0" BorderThickness="10" CornerRadius="25"/>

                    <Grid Grid.Row="0" Grid.Column="1" Margin="10">
                        <Grid.RowDefinitions>
                            <RowDefinition Height="30"/>
                            <RowDefinition Height="*"/>
                        </Grid.RowDefinitions>
                        <TextBlock Text="   UI" FontWeight="Bold" FontSize="14" Height="30"/>
                        <StackPanel Grid.Row="1" Margin="10">
                            <StackPanel Orientation="Horizontal">
                                <TextBlock Text="Configurator Theme: " VerticalAlignment="Center"/>
                                <ComboBox x:Name="CmbConfiguratorTheme" Width="160" VerticalContentAlignment="Center" IsEditable="False" ItemsSource="{Binding AvailableThemes}" SelectedItem="{Binding ConfiguratorTheme, Mode=TwoWay, UpdateSourceTrigger=PropertyChanged}"/>
                                <Button x:Name="BtnUpdateTheme" Margin="5 0" Content="Update..." Height="30" Width="70" Click="BtnUpdateTheme_Click"/>
                            </StackPanel>
                        </StackPanel>
                    </Grid>
                    <Border Grid.Column="1" Grid.Row="0" BorderThickness="10" CornerRadius="25"/>

                    <Grid Grid.Row="1" Grid.Column="0" Margin="10">
                        <Grid.RowDefinitions>
                            <RowDefinition Height="30"/>
                            <RowDefinition Height="*"/>
                        </Grid.RowDefinitions>
                        <TextBlock Text="   Image" FontWeight="Bold" FontSize="14" Height="30"/>
                        <StackPanel Grid.Row="1" Margin="10">
                            <CheckBox x:Name="ChkUseHD" Content="Download HD Images (when available)" IsChecked="{Binding UseHD, Mode=TwoWay, UpdateSourceTrigger=PropertyChanged}"/>
                            <StackPanel Orientation="Horizontal">
                                <TextBlock Text="Desktop Fill type:  " VerticalAlignment="Center"/>
                                <ComboBox x:Name="CmbWallpaperStyle" Width="160" VerticalContentAlignment="Center" IsEditable="False" ItemsSource="" SelectedItem="{Binding WallpaperStyle, Mode=TwoWay, Converter={StaticResource enumConverter}, UpdateSourceTrigger=PropertyChanged}"/>
                                <Button x:Name="BtnStyleChange" Content="Update Style" Margin="5 0" Height="30" Width="90" Click="BtnStyleChange_Click"/>
                            </StackPanel>
                        </StackPanel>
                    </Grid>
                    <Border Grid.Column="0" Grid.Row="1" BorderThickness="10" CornerRadius="25"/>

                    <Grid Grid.Row="1" Grid.Column="2" Margin="10">
                        <Grid.RowDefinitions>
                            <RowDefinition Height="30"/>
                            <RowDefinition Height="*"/>
                        </Grid.RowDefinitions>
                        <TextBlock Text="   Tools" FontWeight="Bold" FontSize="14" Height="30"/>
                        <Grid Margin="0 4" Grid.Row="1">
                            <Grid.RowDefinitions>
                                <RowDefinition Height="*" MinHeight="32"/>
                                <RowDefinition Height="*" MinHeight="32"/>
                                <RowDefinition Height="*" MinHeight="32"/>
                                <RowDefinition Height="*" MinHeight="32"/>
                            </Grid.RowDefinitions>
                            <Button x:Name="BtnSaveImg" Content="Save Current Image" Grid.Row="0" Width="250" Height="32" Click="BtnSaveImg_Click"/>
                            <Button x:Name="BtnUpdate" Content="Check for update..." Grid.Row="1" Width="250" Height="32"  Click="BtnUpdate_Click"/>
                            <Button x:Name="BtnForceRun" Content="Force Run" Grid.Row="2" Width="250" Height="32" Click="BtnForceRun_Click"/>
                            <Button x:Name="BtnResetDefault" Content="Reset to Defaults" Grid.Row="3" Width="250" Height="32" Click="BtnResetDefault_Click"/>
                        </Grid>
                    </Grid>
                    <Border Grid.Column="1" Grid.Row="1" BorderThickness="10" CornerRadius="25"/>

                </Grid>
            </TabViewItem>
            <TabViewItem x:Name="OutputTab" Header="Output">
                <Grid>
                    <Grid.RowDefinitions>
                        <RowDefinition Height="35"/>
                        <RowDefinition Height="*"/>
                    </Grid.RowDefinitions>
                    <Button x:Name="BtnClearOut" Content="Clear Output" Margin="5 3 0 0" Width="120" HorizontalAlignment="Left" Click="BtnClearOut_Click"/>
                    <TextBox Grid.Row="1" x:Name="TxtOutput" VerticalAlignment="Stretch" HorizontalAlignment="Stretch" Margin="7"/>

                </Grid>
            </TabViewItem>
        </TabView>
    </Grid>
</Window>
