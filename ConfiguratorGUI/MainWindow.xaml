<Window x:Name="window" x:Class="ConfiguratorGUI.MainWindow"
        xmlns="http://schemas.microsoft.com/winfx/2006/xaml/presentation"
        xmlns:x="http://schemas.microsoft.com/winfx/2006/xaml"
        xmlns:d="http://schemas.microsoft.com/expression/blend/2008"
        xmlns:mc="http://schemas.openxmlformats.org/markup-compatibility/2006"
        xmlns:local="clr-namespace:ConfiguratorGUI"
        xmlns:utils="clr-namespace:APODWallpaper.Utils;assembly=APODWallpaper"
        xmlns:sys="clr-namespace:System;assembly=mscorlib"
        mc:Ignorable="d"
        Title="APODWallpaper Configurator" 
        
        Height="450" Width="1000"
        Background="Transparent" WindowStyle="None" 
        AllowsTransparency="True"
        ResizeMode="CanResizeWithGrip"
        Icon="/Resources/Spanner.png" Closing="window_Closing" Loaded="window_Loaded">
    <Window.DataContext>
        <local:ViewModel/>
    </Window.DataContext>
    <Window.Triggers>
        <EventTrigger RoutedEvent="Window.Loaded">
            <BeginStoryboard>
                <Storyboard>
                    <DoubleAnimation Storyboard.TargetName="grdMain" Storyboard.TargetProperty="Opacity" 
                                         From="0.0" To="1.0" Duration="0:0:0:0.3"/>
                    <DoubleAnimation Storyboard.TargetName="window" Storyboard.TargetProperty="Height" 
                                         From="400" To="500.0" Duration="0:0:0.35"/>
                </Storyboard>
            </BeginStoryboard>
        </EventTrigger>
    </Window.Triggers>
    <Window.Resources>
        <local:EnumConverter x:Key="enumConverter"/>
        <local:InverseBoolConverter x:Key="inverseBoolConverter"/>
        <local:PostfixConverter x:Key="postfixConverter"/>
        <local:LongConverter x:Key="longConverter"/>
        <Storyboard x:Key="closeAnim" Completed="CloseStoryboard_Completed">
            <DoubleAnimation Storyboard.TargetName="grdMain" Storyboard.TargetProperty="Opacity"
                             From="1.0" To="0.0" Duration="0:0:0.4"/>
            <DoubleAnimation Storyboard.TargetName="window" Storyboard.TargetProperty="Width" 
                                         To="750" From="800.0" Duration="0:0:0.2"/>
        </Storyboard>
        
        <ObjectDataProvider x:Key="StyleEnumSource" ObjectType="{x:Type sys:Enum}" MethodName="GetValues">
            <ObjectDataProvider.MethodParameters>
                <x:Type TypeName="utils:WallpaperStyleEnum"/>
            </ObjectDataProvider.MethodParameters>
        </ObjectDataProvider>
        <Style x:Key="Dark_light" TargetType="Grid">
            <Setter Property="Background" Value="{DynamicResource Light}"/>
        </Style>
        <Style TargetType="{x:Type ListView}">
            <Setter Property="Background" Value="{DynamicResource Light}"/>
        </Style>
        <!-- Dark_mid-->
        <Style TargetType="{x:Type StackPanel}">
            <Setter Property="Background" Value="{DynamicResource Mid}"/>
        </Style>
        <Style TargetType="Label">
            <Setter Property="Background" Value="{DynamicResource Dark}"/>
            <Setter Property="Foreground" Value="{DynamicResource Foreground}"/>
        </Style>
        <Style TargetType="{x:Type RadioButton}">
            <Setter Property="Foreground" Value="{DynamicResource Foreground}"/>
            <Setter Property="Background" Value="{DynamicResource Dark}"/>
            <Setter Property="Template" Value="{DynamicResource RadioButtonTemplateCustom}"/>
        </Style>
        <Style TargetType="{x:Type TextBlock}">
            <Setter Property="Foreground" Value="{DynamicResource Foreground}"/>
        </Style>
        <Style TargetType="{x:Type CheckBox}">
            <Setter Property="Foreground" Value="{DynamicResource Foreground}"/>
            <Setter Property="Background" Value="{DynamicResource Dark}"/>
            <Setter Property="Margin" Value="5 3"/>
            <Setter Property="Template" Value="{DynamicResource CheckBoxTemplateCustom}"/>
        </Style>
        <Style TargetType="{x:Type Button}">
            <Setter Property="Foreground" Value="{DynamicResource Foreground}"/>
            <Setter Property="Background" Value="{DynamicResource Dark}"/>
            <Setter Property="HorizontalContentAlignment" Value="Center"/>
            <Setter Property="VerticalContentAlignment" Value="Center"/>
            <Setter Property="HorizontalAlignment" Value="Stretch"/>
            <Setter Property="VerticalAlignment" Value="Stretch"/>
            <Setter Property="Template">
                <Setter.Value>
                    <ControlTemplate TargetType="{x:Type Button}">
                        <Grid Margin="{TemplateBinding Margin}">
                            <Rectangle x:Name="RctBtn" RadiusX="7" RadiusY="7" Fill="{TemplateBinding Background}"/>
                            <ContentPresenter Content="{TemplateBinding Content}" 
                                   HorizontalAlignment="{TemplateBinding HorizontalContentAlignment}" VerticalAlignment="{TemplateBinding VerticalContentAlignment}"/>
                        </Grid>
                        <ControlTemplate.Triggers>
                            <Trigger Property="IsMouseOver" Value="True">
                                <Setter TargetName="RctBtn" Property="Fill" Value="{DynamicResource MouseOver}"/>
                            </Trigger>
                        </ControlTemplate.Triggers>
                    </ControlTemplate>
                </Setter.Value>
            </Setter>
        </Style>
        <Style TargetType="{x:Type Button}" x:Key="BtnClose">
            <Setter Property="Template">
                <Setter.Value>
                    <ControlTemplate TargetType="{x:Type Button}">
                        <Grid>
                            <Rectangle x:Name="rect" Fill="{DynamicResource Dark}" RadiusX="5" RadiusY="5" Margin="1 0"/>
                            <ContentPresenter Content="{TemplateBinding Content}" VerticalAlignment="Center" HorizontalAlignment="Center"/> <!-- Foreground="{TemplateBinding Foreground}"/> -->
                        </Grid>
                        <ControlTemplate.Triggers>
                            <Trigger Property="IsMouseOver" Value="True">
                                <Setter TargetName="rect" Property="Fill" Value="#CCFF0000"/>
                            </Trigger>
                        </ControlTemplate.Triggers>
                    </ControlTemplate>
                </Setter.Value>
            </Setter>
        </Style>
        <Style TargetType="{x:Type TabItem}">
            <Setter Property="Foreground" Value="{DynamicResource Foreground}"/>
            <Setter Property="Template">
                <Setter.Value>
                    <ControlTemplate TargetType="{x:Type TabItem}">
                        <Border>
                            <Grid>
                                <Grid>
                                    <Border x:Name="border" 
                                            CornerRadius="3,3,0,0"
                                            Background="{DynamicResource Light}"/>
                                </Grid>
                                <ContentPresenter ContentSource="Header"
                                                      HorizontalAlignment="Center"
                                                      VerticalAlignment="Center" Width="auto" Margin="5 3"/>
                            </Grid>
                        </Border>

                        <ControlTemplate.Triggers>
                            <Trigger Property="IsSelected" Value="True">
                                <Setter TargetName="border" Property="Background" Value="{DynamicResource Selected}"/>
                            </Trigger>
                            <Trigger Property="IsMouseOver" Value="True">
                                <Setter TargetName="border" Property="Background" Value="{DynamicResource MouseOver}"/>
                            </Trigger>
                        </ControlTemplate.Triggers>
                    </ControlTemplate>
                </Setter.Value>
            </Setter>
        </Style>
    </Window.Resources>
    <Grid x:Name="grdMain" Width="{Binding Width, ElementName=window}" Height="{Binding Height, ElementName=window}" Background="{DynamicResource Dark}">
        <Grid.RowDefinitions>
            <RowDefinition Height="30"/>
            <RowDefinition Height="*"/>
        </Grid.RowDefinitions>
        <Grid x:Name="TitleBar" MouseDown="TitleBar_MouseDown">
            <Grid.ColumnDefinitions>
                <ColumnDefinition Width="auto"/>
                <ColumnDefinition Width="*"/>
                <ColumnDefinition Width="auto"/>
            </Grid.ColumnDefinitions>
            <ToggleButton/>
            <StackPanel Orientation="Horizontal" Background="{DynamicResource Dark}" Grid.Column="0">
                <Image Source="{Binding Icon, ElementName=window}" Width="20" Height="20" Margin="5"/>
                <Label Content="{Binding Title, ElementName=window}"/>
            </StackPanel>
            <Rectangle Grid.Column="1" Fill="{DynamicResource Dark}"/>
            <StackPanel Orientation="Horizontal" Background="{DynamicResource Dark}" Grid.Column="2">
                <Button x:Name="BtnMinimise" Content="-"  Width="40" Click="BtnMinimise_Click"/>
                <Button x:Name="BtnMaximise" Width="40" Click="BtnMaximise_Click">
                    <Path Stroke="{DynamicResource Foreground}">
                        <Path.Data>
                            <RectangleGeometry Rect="0 0 8 8"/>
                        </Path.Data>
                    </Path>
                </Button>
                <Button x:Name="BtnClose" Content="X" Style="{DynamicResource BtnClose}" Width="40" Foreground="{DynamicResource Foreground}" IsCancel="True" Click="BtnClose_Click"/>
            </StackPanel>
        </Grid>
        <TabControl x:Name="CustomTabControl" Background="{DynamicResource Light}" Grid.ColumnSpan="5" Grid.Row="1" BorderBrush="{DynamicResource Light}">
            <TabItem x:Name="ImageTab" Header="Image manager">
                <Grid ScrollViewer.CanContentScroll="True">
                    <Grid.ColumnDefinitions>
                        <ColumnDefinition Width="1*" />
                        <!--<ColumnDefinition Width="30" />-->
                    </Grid.ColumnDefinitions>
                    <Grid.RowDefinitions>
                        <RowDefinition Height="1*" />
                        <RowDefinition Height="50" />
                    </Grid.RowDefinitions>
                    <ListView ItemsSource="{Binding MyPictureData}" x:Name="wallpaperView" 
                              SelectedItem="{Binding SelectedItem}" SelectionMode="Single"
                              ScrollViewer.HorizontalScrollBarVisibility="Disabled">
                        <ItemsControl.ItemsPanel>
                            <ItemsPanelTemplate>
                                <WrapPanel Orientation="Horizontal"/>
                            </ItemsPanelTemplate>
                        </ItemsControl.ItemsPanel>
                        <ListView.ItemTemplate>
                            <DataTemplate DataType="utils:PictureData">
                                <Button Command="{Binding DataContext.SelectCommand, Source={x:Reference wallpaperView}}" 
                            CommandParameter="{Binding Source}">
                                    <!--<Button>-->
                                    <StackPanel Width="220" Height="240" Margin="5">
                                        <TextBlock Text="{Binding Path=Name}" FontWeight="Bold"/>
                                        <TextBlock Text="{Binding Path=Date, StringFormat=D}"/> 
                                        <TextBlock Text="{Binding Path=Description}"/>
                                        <Button Command="{Binding DataContext.DeleteCommand, Source={x:Reference wallpaperView}}" CommandParameter="{Binding Source}">Delete</Button>
                                        <Image Stretch="UniformToFill">
                                            <Image.Source>
                                                <BitmapImage UriSource="{Binding Source}" CacheOption="OnLoad" DecodePixelWidth="{Binding DataContext.PreviewQuality, Source={x:Reference SettingsTab}}"/>
                                            </Image.Source>
                                        </Image>
                                    </StackPanel>
                                </Button>
                            </DataTemplate>
                        </ListView.ItemTemplate>
                    </ListView>
                    <Button x:Name="BtnCheckNew" Content="Check for new image" Grid.Row="1" Width="250" Height="32" Command="{Binding CheckNewCommand}"/>
                </Grid>
            </TabItem>
            <TabItem x:Name="SettingsTab" Header="Settings" DataContext="{Binding Source={x:Static utils:Configuration.Config}}">
                <Grid Style="{DynamicResource Dark_light}">
                    <Grid.ColumnDefinitions>
                        <ColumnDefinition Width="*"/>
                        <ColumnDefinition Width="*"/>
                    </Grid.ColumnDefinitions>
                    <Grid.RowDefinitions>
                        <RowDefinition Height="*"/>
                        <RowDefinition Height="*"/>
                    </Grid.RowDefinitions>
                    <Grid Grid.Row="0" Grid.Column="0" Background="{DynamicResource Mid}" Margin="10">
                        <Grid.RowDefinitions>
                            <RowDefinition Height="30"/>
                            <RowDefinition Height="*"/>
                        </Grid.RowDefinitions>
                        <Label Content="   General" FontWeight="Bold" FontSize="14" Height="30"/>
                        <StackPanel Margin="10" Grid.Row="1">
                            <CheckBox x:Name="ChkExplainImage" Content="Show image explanation on update" IsChecked="{Binding ExplainImage, Mode=TwoWay, UpdateSourceTrigger=PropertyChanged}"/>
                        </StackPanel>
                    </Grid>
                    <Border Grid.Column="0" Grid.Row="0" BorderThickness="10" CornerRadius="25" BorderBrush="{DynamicResource Light}"/>

                    <Grid Grid.Row="0" Grid.Column="1" Background="{DynamicResource Mid}" Margin="10">
                        <Grid.RowDefinitions>
                            <RowDefinition Height="30"/>
                            <RowDefinition Height="*"/>
                        </Grid.RowDefinitions>
                        <Label Content="   UI" FontWeight="Bold" FontSize="14" Height="30"/>
                        <StackPanel Grid.Row="1" Margin="10">
                            <StackPanel Orientation="Horizontal">
                                <TextBlock Text="Configurator Theme: " VerticalAlignment="Center"/>
                                <ComboBox x:Name="CmbConfiguratorTheme" Width="160" VerticalContentAlignment="Center" IsReadOnly="True" ItemsSource="{Binding AvailableThemes, Mode=TwoWay, UpdateSourceTrigger=PropertyChanged, Converter={StaticResource postfixConverter}, ConverterParameter=.xaml}" SelectedItem="{Binding ConfiguratorTheme, Mode=TwoWay, UpdateSourceTrigger=PropertyChanged, Converter={StaticResource postfixConverter}, ConverterParameter=.xaml}"/>
                                <Button x:Name="BtnUpdateTheme" Margin="5 0" Content="Update..." Height="30" Width="70" Click="BtnUpdateTheme_Click"/>
                            </StackPanel>
                            <StackPanel Orientation="Horizontal">
                                <TextBlock Text="Image preview quality (restart required): " VerticalAlignment="Center"/>
                                <TextBox x:Name="TxtPreviewQuality" Text="{Binding PreviewQuality, Converter={StaticResource longConverter}, Mode=TwoWay, UpdateSourceTrigger=PropertyChanged}" PreviewTextInput="TxtPreviewQuality_PreviewTextInput" DataObject.Pasting="TextBoxPasting" Width="160"/>
                            </StackPanel>
                            
                        </StackPanel>
                    </Grid>
                    <Border Grid.Column="1" Grid.Row="0" BorderThickness="10" CornerRadius="25" BorderBrush="{DynamicResource Light}"/>

                    <Grid Grid.Row="1" Grid.Column="0" Background="{DynamicResource Mid}" Margin="10">
                        <Grid.RowDefinitions>
                            <RowDefinition Height="30"/>
                            <RowDefinition Height="*"/>
                        </Grid.RowDefinitions>
                        <Label Content="   Image" FontWeight="Bold" FontSize="14" Height="30"/>
                        <StackPanel Grid.Row="1" Margin="10">
                            <CheckBox x:Name="ChkStartup" Content="Update image on startup" IsChecked="{Binding RunStartup, Mode=TwoWay, UpdateSourceTrigger=PropertyChanged}"/>
                            <CheckBox x:Name="ChkUseHD" Content="Download HD Images (when available)" IsChecked="{Binding Path=UseHD, Mode=TwoWay, UpdateSourceTrigger=PropertyChanged}"/>
                            <StackPanel Orientation="Horizontal">
                                <TextBlock Text="Desktop Fill type:  " VerticalAlignment="Center"/>
                                <ComboBox x:Name="CmbWallpaperStyle" Width="160" VerticalContentAlignment="Center" IsReadOnly="True" ItemsSource="{Binding Source={StaticResource StyleEnumSource}}" SelectedItem="{Binding WallpaperStyle, Mode=TwoWay, Converter={StaticResource enumConverter}, UpdateSourceTrigger=PropertyChanged}"/>
                                <Button x:Name="BtnStyleChange" Content="Update Style" Margin="5 0" Height="30" Width="90" Click="BtnStyleChange_Click"/>
                            </StackPanel>
                        </StackPanel>
                    </Grid>
                    <Border Grid.Column="0" Grid.Row="1" BorderThickness="10" CornerRadius="25" BorderBrush="{DynamicResource Light}"/>

                    <Grid Grid.Row="1" Grid.Column="2" Background="{DynamicResource Mid}" Margin="10">
                        <Grid.RowDefinitions>
                            <RowDefinition Height="30"/>
                            <RowDefinition Height="*"/>
                        </Grid.RowDefinitions>
                        <Label Content="   Tools" FontWeight="Bold" FontSize="14" Height="30"/>
                        <Grid Margin="0 4" Grid.Row="1">
                            <Grid.RowDefinitions>
                                <RowDefinition Height="*" MinHeight="32"/>
                                <RowDefinition Height="*" MinHeight="32"/>
                                <RowDefinition Height="*" MinHeight="32"/>
                                <RowDefinition Height="*" MinHeight="32"/>
                            </Grid.RowDefinitions>
                            <Button x:Name="BtnSaveImg" Content="Save Current Image" Grid.Row="0" Width="250" Height="32" Click="BtnSaveImg_Click"/>
                            <Button x:Name="BtnUpdate" Content="Check for update..." Grid.Row="1" Width="250" Height="32"  Click="BtnUpdate_Click"/>
                            <Button x:Name="BtnForceRun" Content="Force Run" Grid.Row="2" Width="250" Height="32" Click="BtnForceRun_Click"/>
                            <Button x:Name="BtnResetDefault" Content="Reset to Defaults" Grid.Row="3" Width="250" Height="32" Click="BtnResetDefault_Click"/>
                        </Grid>
                    </Grid>
                    <Border Grid.Column="1" Grid.Row="1" BorderThickness="10" CornerRadius="25" BorderBrush="{DynamicResource Light}"/>

                </Grid>
            </TabItem>
            <TabItem x:Name="OutputTab" Header="Output">
                <Grid Style="{DynamicResource Dark_light}">
                    <Grid.RowDefinitions>
                        <RowDefinition Height="35"/>
                        <RowDefinition Height="*"/>
                    </Grid.RowDefinitions>
                    <Button x:Name="BtnClearOut" Content="Clear Output" Margin="5 3 0 0" Width="120" HorizontalAlignment="Left" Click="BtnClearOut_Click"/>
                    <TextBox Grid.Row="1" x:Name="TxtOutput" VerticalAlignment="Stretch" HorizontalAlignment="Stretch" Margin="7" Background="{DynamicResource Dark}" Foreground="{DynamicResource Foreground}"/>
                    
                </Grid>
            </TabItem>
        </TabControl>
    </Grid>
</Window>
